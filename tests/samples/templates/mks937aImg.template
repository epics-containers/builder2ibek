#! Generated by VisualDCT v2.5
#! DBDSTART
#! DBDEND


# mks937aImg.db
#% macro, __doc__, Template database for an inverted magnetron guage connected 
# to one channel of an MKS937A Multi-Sensor System 
# A note on the optional macros: they default to an appropriate hard-coded 
# value if no value is passed for expansion. 
# They are provided to allow the default set points to be changed. 
# Once the set point needs to be changed it may be necessary to alter  
# various other fields defining the range of allowed values. 
# For the majority of applications the defaults should be used.  The levels 
# should only be changed at the request of the vacuum group for non-standard 
# vacuum systems.
#
# IG Note: Historically, some of these records have DISA field switched on $(channel)
#          The reason seems to be to disable record processing for RLA when that interlock
#          is not relevant to the gauge - i.e. IMG-03 would typically not have an MPS interlock
#          so should switch it off. I think this is a bit of a flakey way to do it, as any exceptional
#          cases would not fit this method. Probably needs re-working sometime.
#          IJG 12 August 2014
#
# required substitutions:
#% macro, device,  device name
#% macro, port,    serial port (steam device code ie /ty/0/1 => ty_0_1)
#% macro, channel, MKS 937A channel number (1-4)
#
# optional substitutions:
#% macro, name,        Object name, and gui association name
#% macro, ctlsp_level, The desired control setpoint value.
#% macro, ctlsp_drvh,  The DRVH field on control setpoint records 
#                      (limits max value of control setpoint)
#% macro, ctlsp_drvl,  The DRVL field on control setpoint records. 
#                      (limits min value of control setpoint)
#% macro, ctlsp_hopr,  The HOPR field on control setpoint records 
#                      (high operator value - helps display set correct range).
#% macro, ctlsp_lopr,  The LOPR field on control setpoint records 
#                      (low operator value - helps display set correct range).
#% macro, ctlsp_hihi,  The HIHI alarm field on the control setpoint record.
#% macro, ctlsp_lolo,  The LOLO alarm field on the control setpoint record.
#% macro, ctlsp_high,  The HIGH alarm field on the control setpoint record.
#% macro, ctlsp_low ,  The LOW alarm field on the control setpoint record.
#% macro, ctlsp_desc,  The DESC field on the control setpoint record.
#
#% macro, prosp_level, The desired protection setpoint value.
#% macro, prosp_drvh,  The DRVH field on protection setpoint records 
#                      (limits max value of protection setpoint)
#% macro, prosp_drvl,  The DRVL field on protection setpoint records. 
#                      (limits min value of protection setpoint)
#% macro, prosp_hopr,  The HOPR field on protection setpoint records 
#                      (high operator value - helps display set correct range).
#% macro, prosp_lopr,  The LOPR field on protection setpoint records 
#                      (low operator value - helps display set correct range).
#% macro, prosp_hihi,  The HIHI alarm field on the protection setpoint record.
#% macro, prosp_lolo,  The LOLO alarm field on the protection setpoint record.
#% macro, prosp_high,  The HIGH alarm field on the protection setpoint record.
#% macro, prosp_low ,  The LOW alarm field on the protection setpoint record.
#% macro, prosp_desc,  The DESC field on the protection setpoint record 
#                      (appears as a label on the Img EDM screen).
#
#% macro, rlysp_level, The desired relay setpoint value.
#% macro, rlysp_drvh,  The DRVH field on relay setpdoint records 
#                      (limits max value of relay setpoint)
#% macro, rlysp_drvl,  The DRVL field on relay setpoint records. 
#                      (limits min value of relay setpoint)
#% macro, rlysp_hopr,  The HOPR field on relay setpoint records 
#                      (high operator value - helps display set correct range).
#% macro, rlysp_lopr,  The LOPR field on relay setpoint records 
#                      (low operator value - helps display set correct range).
#% macro, rlysp_hihi,  The HIHI alarm field on the relay setpoint record.
#% macro, rlysp_lolo,  The LOLO alarm field on the relay setpoint record.
#% macro, rlysp_high,  The HIGH alarm field on the relay setpoint record.
#% macro, rlysp_low ,  The LOW alarm field on the relay setpoint record.
#% macro, rlysp_desc,  The DESC field on the relay setpoint record 
#                      (appears as a label on the Img EDM screen).
#
#% macro, rlasp_drvh,  The DRVH field on second relay setpoint records 
#                      (limits max value of second relay setpoint)
#% macro, rlasp_drvl,  The DRVL field on second relay setpoint records. 
#                      (limits min value of second relay setpoint)
#% macro, rlasp_hopr,  The HOPR field on second relay setpoint records 
#                      (high operator value - helps display set correct range).
#% macro, rlasp_lopr,  The LOPR field on second relay setpoint records 
#                      (low operator value - helps display set correct range).
#% macro, rlasp_hihi,  The HIHI alarm field on the second relay setpoint record.
#% macro, rlasp_lolo,  The LOLO alarm field on the second relay setpoint record.
#% macro, rlasp_high,  The HIGH alarm field on the second relay setpoint record.
#% macro, rlasp_low ,  The LOW alarm field on the second relay setpoint record.
#% macro, rlasp_desc,  The DESC field on the second relay setpoint record.
#% macro, offwarn,     Flag to display a warning that switching off the IMG could trip the beam
#% macro, ilk_write_access_pv, bi record to allow (0) of inhibit (1) gauge interlock setpoint overwrite. Default is local record forcing 'Allow'.
################################################################################

# This associates an edm screen with the template
# % gui, $(name=), edm, mks937aImg.edl, device=$(device)

# This associates BOY screens with the template
# % gui, $(name=), boydetail, mks937aApp_opi/img_detail.opi, device=$(device), desc=$(device), name=$(name=)
# % gui, $(name=), boyembed, mks937aApp_opi/img_embed_box.opi, device=$(device), desc=$(device), name=$(name=)
# % gui, $(name=), boyembed, mks937aApp_opi/img_embed.opi, device=$(device), desc=$(device), name=$(name=)

# These define what PVs a valve detail screen should contain
# % gui, $(name=), readback, Pressure,                                $(device):P
# % gui, $(name=), readback, Status,                                  $(device):STA
# % gui, $(name=), readback, Gauge Setpoint Write,                    $(device):PRO:ILKSETSP:NOWRITE
# % gui, $(name=), readback, Relay 1 on SetPoint for Summary,         $(device):RLY1:SP,        =pv("$(device):RLY1:SP.DESC")
# % gui, $(name=), readback, Relay 1 off SetPoint for Summary,        $(device):RLY1:SPOFF,     =pv("$(device):RLY1:SPOFF.DESC")
# % gui, $(name=), readback, Relay 2 on SetPoint for Summary,         $(device):RLY2:SP,        =pv("$(device):RLY2:SP.DESC")
# % gui, $(name=), readback, Relay 3 on SetPoint for Summary,         $(device):RLY3:SP,        =pv("$(device):RLY3:SP.DESC")
## TODO The below gives us feedback on what the state actually is - without this you get the current demand
## (as per differences between EDM and CSS enum menus)
# % gui, $(name=), readback, Cold Cathode,                            $(device):ISENABLED
# % gui, $(name=), enum, Cold Cathode,                                $(device):CCHV

# % gui, $(name=), readback, CTL SP Controlling Gauge,                $(device):CTL:SETCCS,     =concat(pv("$(device):CTL:SP.DESC")," Gauge")
# % gui, $(name=), readback, CTL SP MODE,                             $(device):CTL:SETMODE,    =concat(pv("$(device):CTL:SP.DESC")," Mode")
# % gui, $(name=), readback, Pro Setpoint,                            $(device):PRO:SP,         =pv("$(device):PRO:SP.DESC")
# % gui, $(name=), readback, Relay 1 On Setpoint,                     $(device):RLY1:SP,        =pv("$(device):RLY1:SP.DESC")
# % gui, $(name=), readback, Relay 1 Off Setpoint,                    $(device):RLY1:SPOFF,     =pv("$(device):RLY1:SPOFF.DESC")
# % gui, $(name=), readback, Relay 2 On Setpoint,                     $(device):RLY2:SP,        =pv("$(device):RLY2:SP.DESC")
# % gui, $(name=), readback, Relay 2 Off Setpoint,                    $(device):RLY2:SPOFF,     =pv("$(device):RLY2:SPOFF.DESC")
# % gui, $(name=), readback, Relay 3 On Setpoint,                     $(device):RLY3:SP,        =pv("$(device):RLY3:SP.DESC")
# % gui, $(name=), readback, Relay 3 Off Setpoint,                    $(device):RLY3:SPOFF,     =pv("$(device):RLY3:SPOFF.DESC")
# % gui, $(name=), readback, Relay 4 On Setpoint,                     $(device):RLY4:SP,        =pv("$(device):RLY4:SP.DESC")
# % gui, $(name=), readback, Relay 4 Off Setpoint,                    $(device):RLY4:SPOFF,     =pv("$(device):RLY4:SPOFF.DESC")
# % gui, $(name=), readback, Fast Relay On Setpoint,                  $(device):FRLY:SP,        =pv("$(device):FRLY:SP.DESC")

# % gui, $(name=), demand,   Pro Setpoint,                            $(device):PRO:OUTSP,      =pv("$(device):PRO:SP.DESC")
# % gui, $(name=), demand,   Relay 1 On Setpoint,                     $(device):RLY1:SETSP,     =pv("$(device):RLY1:SP.DESC")
# % gui, $(name=), demand,   Relay 1 Off Setpoint,                    $(device):RLY1:SETSPOFF,  =pv("$(device):RLY1:SPOFF.DESC")
# % gui, $(name=), demand,   Relay 2 On Setpoint,                     $(device):RLY2:SETSP,     =pv("$(device):RLY2:SP.DESC")
# % gui, $(name=), demand,   Relay 2 Off Setpoint,                    $(device):RLY2:SETSPOFF,  =pv("$(device):RLY2:SPOFF.DESC")
# % gui, $(name=), demand,   Relay 3 On Setpoint,                     $(device):RLY3:SETSP,     =pv("$(device):RLY3:SP.DESC")
# % gui, $(name=), demand,   Relay 3 Off Setpoint,                    $(device):RLY3:SETSPOFF,  =pv("$(device):RLY3:SPOFF.DESC")
# % gui, $(name=), demand,   Relay 4 On Setpoint,                     $(device):RLY4:SETSP,     =pv("$(device):RLY4:SP.DESC")
# 
# Cold Cathode Enable
#
#% archiver 10 Monitor
#% controldesk Pressure scon
#
record(bo, "$(device):CCHV") {
  field(DESC, "Cold Cathode Enable")
  field(DTYP, "stream")
  field(OUT, "@mks937a.protocol ccenable($(channel)) $(port) 0")
  field(FLNK, "$(device):STA")
  field(ZNAM, "Off")
  field(ONAM, "On")
}

record(bi, "$(device):SWITCHING") {
  field(DESC, "Switching")
  field(PINI, "YES")
  field(INP, "0")
  field(ONAM, "Switching")
}

################################################################################
# Status
#
#% archiver 10 Monitor
#% controldesk Pressure smon
#
record(mbbi, "$(device):STA") {
  field(DTYP, "stream")
  field(INP, "@mks937a.protocol status($(channel)) $(port) 0")
  field(DESC, "Status")
  field(SCAN, "1 second")
  field(FLNK, "$(device):PDIS")
  field(ZRST, "OK")
  field(ONST, "OK")
  field(TWST, "Above Range")
  field(THST, "At Atmosphere")
  field(FRST, "Low Emission")
  field(FVST, "Filament Off")
  field(SXST, "HV Off")
  field(SVST, "Startup Delay")
  field(EIST, "Below Range")
  field(NIST, "Controlled")
  field(TEST, "Protected State")
  field(ELST, "No Gauge")
  field(TVST, "Not Connected")
  field(TTST, "Wrong Gauge")
  field(FTST, "Bad Command")
  field(FFST, "Locked Out")
  field(UNSV, "MAJOR")
  field(ZRSV, "NO_ALARM")
  field(ONSV, "NO_ALARM")
  field(TWSV, "MINOR")
  field(THSV, "MINOR")
  field(FRSV, "MAJOR")
  field(FVSV, "MAJOR")
  field(SXSV, "MAJOR")
  field(SVSV, "MINOR")
  field(EISV, "NO_ALARM")
  field(NISV, "MINOR")
  field(TESV, "MINOR")
  field(ELSV, "MAJOR")
  field(TVSV, "MAJOR")
  field(TTSV, "MAJOR")
  field(FTSV, "MAJOR")
  field(FFSV, "MAJOR")
}

#############################################################################
# Pressure
# 
# % archiver 1 Monitor
# % controldesk Pressure readback
record(ai, "$(device):P") {
  field(DESC, "Pressure")
  field(DTYP, "stream")
  field(INP, "@mks937a.protocol pressure($(channel)) $(port) 0")
  field(FLNK, "$(device):PLOG")
  field(EGU, "mbar")
  field(PREC, "11")
  field(HOPR, "0.01")
  field(LOPR, "1.0E-11")
  field(SDIS, "$(device):PDIS")
  field(DISS, "INVALID")
}

record(calcout, "$(device):ADEL") {
  field(DESC, "deadband")
  field(CALC, "A/B")
  field(OUT, "$(device):P.ADEL")
  field(INPA, "$(device):P")
  field(INPB, "20")
  field(SCAN, "10 second")
}

#
#% archiver 1 Monitor
#
record(calc, "$(device):PLOG") {
  field(DESC, "log Pressure")
  field(EGU, "log")
  field(CALC, "LOG(A)")
  field(INPA, "$(device):P MS")
  field(FLNK, "$(device):PMAX")
  field(HOPR, "-2")
  field(LOPR, "-11")
  field(ADEL, "0.025")
}
record(ai, "$(device):PMAX")
{
    field(DESC, "Max Pressure")
    field(INP,  "$(device):P MS")
    field(FLNK, "$(device):PMIN")
    field(EGU,  "mbar")
    field(PREC, "11")
    field(HOPR, "0.01")
    field(LOPR, "1.0E-11")
}
record(ai, "$(device):PMIN")
{
    field(DESC, "Min Pressure")
    field(INP,  "$(device):P MS")
    field(EGU,  "mbar")
    field(PREC, "11")
    field(HOPR, "0.01")
    field(LOPR, "1.0E-11")
}
################################################################################
# Control - IMG Enable
#
record(ao, "$(device):CTL:SETSP") {
  field(DESC, "$(ctlsp_desc=IMG Enable)")
  field(FLNK, "$(device):CTL:SEQ")
  field(EGU, "mbar")
  field(PREC, "1")
  field(HOPR, "$(ctlsp_hopr=9.5e-1)")
  field(LOPR, "$(ctlsp_lopr=2.7e-3)")
  field(DRVH, "$(ctlsp_drvh=9.5e-1)")
  field(DRVL, "$(ctlsp_drvl=2.7e-3)")
  field(DOL, "$(ctlsp_level=1.0e-2)")
}

record(mbbo, "$(device):CTL:ENABLE") {
  field(DESC, "Enable Control Setpoint")
  field(FLNK, "$(device):CTL:SEQ")
  field(ZRST, "Force On I/L")
  field(ONST, "I/L Operating")
  field(ZRVL, "1")
  field(ONVL, "2")
  field(ZRSV, "MAJOR")
  field(ONSV, "NO_ALARM")
  field(DOL, "1")
  field(SDIS, "$(device):CTL:ILKSETSP:NOWRITE")
  #field(PINI, "YES")
}

record(seq, "$(device):CTL:SEQ") {
  field(DESC, "Sequence Control Setpoint")
  field(SELM, "Specified")
  field(SELL, "$(device):CTL:ENABLE.RVAL")
  field(DOL1, "0")
  field(LNK1, "$(device):CTL:DIS PP")
  field(DOL2, "$(device):CTL:SETSP")
  field(LNK2, "$(device):CTL:OUTSP PP")
  field(SDIS, "$(device):CTL:ILKSETSP:NOWRITE")
}

record(ai, "$(device):CTL:SP") 
  {
  field(DESC, "$(ctlsp_desc=IMG Enable)")
  field(DTYP, "stream")
  field(INP, "@mks937a.protocol getsp($(channel),CTL,$(device)) $(port) 0")
  field(SCAN, "1 second")
  field(PINI, "YES")
  field(EGU, "mbar")
  field(PREC, "1")
  field(HOPR, "$(ctlsp_hopr=9.5e-1)")
  field(LOPR, "$(ctlsp_lopr=2.7e-3)")
  field(HIHI, "$(ctlsp_hihi=9.6e-1)")
  field(LOLO, "$(ctlsp_lolo=2.6e-3)")
  field(HIGH, "$(ctlsp_high=1.1e-2)")
  field(LOW, "$(ctlsp_low=9.0e-3)")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
  }

record(ao, "$(device):CTL:OUTSP") 
    {
    field(DESC, "Output Control Setpoint")
    field(DTYP, "stream")
    field(SDIS, "$(device):CTL:ILKSETSP:NOWRITE")
    field(OUT, "@mks937a.protocol setsp($(channel),CTL,$(device)) $(port) 0")
    }

record(bo, "$(device):CTL:DIS") 
  {
  field(DESC, "Disable Control Setpoint")
  field(DTYP, "stream")
  field(OUT, "@mks937a.protocol dissp($(channel),CTL) $(port) 0")
  }

# Get the implied disabled state of the CTL:SETSP
# if CTL:SP returns a non-zero value, then it is not disabled
# and it's in the mode "I/L Operating"
#
record(calcout, "$(device):CTL:GETDISCALC")
  {
  field(DESC, "Read Disable Setpoint")
  field(SCAN, "1 second")
  field(OUT, "$(device):CTL:GETDIS")
  field(INPA, "$(device):CTL:SP.VAL PP")
  field(CALC, "A<1e-10?0:1")
  field(FLNK, "$(device):CTL:GETDIS")
  }
# Convert the above disabled state to mbbi
record(mbbi, "$(device):CTL:GETDIS") 
  {
  field(DESC, "Read Disable Setpoint")
  field(SCAN, "Passive")
  field(INP, "$(device):CTL:GETDISCALC")
  field(ZRST, "Force On I/L")
  field(ONST, "I/L Operating")
  field(ZRVL, "1")
  field(ONVL, "2")
  }

################################################################################
# Protection - IMG Overpressure
#
#% archiver 10 Monitor
#
record(ao, "$(device):PRO:SETSP") {
  field(DESC, "$(prosp_desc=IMG Overpressure)")
  field(FLNK, "$(device):PRO:SEQ")
  field(EGU, "mbar")
  field(PREC, "1")
  field(HOPR, "$(prosp_hopr=1.0e-2)")
  field(LOPR, "$(prosp_lopr=1.3e-5)")
  field(DRVH, "$(prosp_drvh=1.0e-2)")
  field(DRVL, "$(prosp_drvl=1.3e-5)")
  field(DOL, "$(prosp_level=5.0e-4)")
}

#
#% archiver 10 Monitor
#
record(mbbo, "$(device):PRO:ENABLE") {
  field(DESC, "Enable Protection Setpoint")
  field(FLNK, "$(device):PRO:SEQ")
  field(ZRST, "Force On I/L")
  field(ONST, "I/L Operating")
  field(ZRVL, "1")
  field(ONVL, "2")
  field(ZRSV, "MAJOR")
  field(ONSV, "NO_ALARM")
  field(DOL, "1")
  #field(PINI, "YES")
}

record(seq, "$(device):PRO:SEQ") 
    {
    field(DESC, "Sequence Protection Setpoint")
    field(SELM, "Specified")
    field(SELL, "$(device):PRO:ENABLE.RVAL")
    field(DOL1, "0")
    field(LNK1, "$(device):PRO:DIS PP")
    field(DOL2, "$(device):PRO:SETSP")
    field(LNK2, "$(device):PRO:OUTSP PP")
    }

#
#% archiver 10 Monitor
#% controldesk IMG Overpressure readback
#
record(ai, "$(device):PRO:SP") {
  field(DESC, "$(prosp_desc=IMG Overpressure)")
  field(DTYP, "stream")
  field(INP, "@mks937a.protocol getsp($(channel),PRO,$(device)) $(port) 0")
  field(SCAN, "1 second")
  field(EGU, "mbar")
  field(PREC, "1")
  field(HOPR, "$(prosp_hopr=1.0e-2)")
  field(LOPR, "$(prosp_lopr=1.3e-5)")
  field(HIHI, "$(prosp_hihi=1.1e-2)")
  field(LOLO, "$(prosp_lolo=1.2e-5)")
  field(HIGH, "$(prosp_high=5.1e-4)")
  field(LOW, "$(prosp_low=4.9e-4)")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
}

record(ao, "$(device):PRO:OUTSP") 
    {
    field(DESC, "Output Protection Setpoint")
    field(DTYP, "stream")
    field(SDIS, "$(device):PRO:ILKSETSP:NOWRITE")
    field(OUT, "@mks937a.protocol setsp($(channel),PRO,$(device)) $(port) 0")
    }

record(bo, "$(device):PRO:DIS") {
  field(DESC, "Disable Protection Setpoint")
  field(DTYP, "stream")
  field(OUT, "@mks937a.protocol dissp($(channel),PRO) $(port) 0")
}

################################################################################
# Relay - Valve Interlock
#
#% archiver 10 Monitor
#
record(ao, "$(device):RLY:SETSP") {
  field(DESC, "$(rlysp_desc=Valve Interlock)")
  field(FLNK, "$(device):RLY:SEQ")
  field(EGU, "mbar")
  field(PREC, "1")
  field(HOPR, "$(rlysp_hopr=1.2e-2)")
  field(LOPR, "$(rlysp_lopr=2.7e-10)")
  field(DRVH, "$(rlysp_drvh=1.2e-2)")
  field(DRVL, "$(rlysp_drvl=2.7e-10)")
  field(DOL, "$(rlysp_level=1.0e-6)")
  field(SDIS, "$(device):RLY:ILKSETSP:NOWRITE")
}

#
#% archiver 10 Monitor
#
record(mbbo, "$(device):RLY:ENABLE") {
  field(DESC, "Enable Relay Setpoint")
  field(FLNK, "$(device):RLY:SEQ")
  field(ZRST, "Force On I/L")
  field(ONST, "I/L Operating")
  field(ZRVL, "1")
  field(ONVL, "2")
  field(ZRSV, "MAJOR")
  field(ONSV, "NO_ALARM")
  field(DOL, "1")
  #field(PINI, "YES")
}

record(seq, "$(device):RLY:SEQ") {
  field(DESC, "Sequence Relay Setpoint")
  field(SELM, "Specified")
  field(SELL, "$(device):RLY:ENABLE.RVAL")
  field(DOL1, "0")
  field(LNK1, "$(device):RLY:DIS PP")
  field(DOL2, "$(device):RLY:SETSP")
  field(LNK2, "$(device):RLY:OUTSP PP")
}

#
#% archiver 10 Monitor
#% controldesk Valve Interlock readback
#
record(ai, "$(device):RLY:SP") {
  field(DESC, "$(rlysp_desc=Valve Interlock)")
  field(DTYP, "stream")
  field(INP, "@mks937a.protocol getsp($(channel),RLY,$(device)) $(port) 0")
  field(SCAN, "1 second")
  field(EGU, "mbar")
  field(PREC, "1")
  field(HOPR, "$(rlysp_hopr=1.2e-2)")
  field(LOPR, "$(rlysp_lopr=2.7e-10)")
  field(HIHI, "$(rlysp_hihi=1.3e-2)")
  field(LOLO, "$(rlysp_lolo=2.6e-10)")
  field(HIGH, "$(rlysp_high=1.1e-6)")
  field(LOW, "$(rlysp_low=9.0e-7)")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
}

record(ao, "$(device):RLY:OUTSP") 
    {
    field(DESC, "Output Relay Setpoint")
    field(DTYP, "stream")
    field(SDIS, "$(device):RLY:ILKSETSP:NOWRITE")
    field(OUT, "@mks937a.protocol setsp($(channel),RLY,$(device)) $(port) 0")
    }

record(bo, "$(device):RLY:DIS") 
    {
    field(DESC, "Disable Relay Setpoint")
    field(DTYP, "stream")
    field(OUT, "@mks937a.protocol dissp($(channel),RLY) $(port) 0")
    }

################################################################################
# Relay 2 (Chanel A Only) - MPS Interlock
#
record(calc, "$(device):RLA:EXISTS") {
  field(DESC, "Relay Exists")
  field(CALC, "A=B?0:1")
  field(INPA, "$(channel)")
  field(INPB, "1")
  field(PINI, "YES")
}

#
#% archiver 10 Monitor
#
record(ao, "$(device):RLA:SETSP") {
  field(DESC, "$(rlasp_desc=MPS Interlock)")
  field(FLNK, "$(device):RLA:SEQ")
  field(EGU, "mbar")
  field(PREC, "1")
  field(HOPR, "$(rlasp_hopr=1.2e-2)")
  field(LOPR, "$(rlasp_lopr=2.7e-10)")
  field(DRVH, "$(rlasp_drvh=1.2e-2)")
  field(DRVL, "$(rlasp_drvl=2.7e-10)")
  field(DISA, "$(channel)")
  field(DOL, "1.0e-7")
}

#
#% archiver 10 Monitor
#
record(mbbo, "$(device):RLA:ENABLE") {
  field(DESC, "Enable Relay Setpoint")
  field(FLNK, "$(device):RLA:SEQ")
  field(ZRST, "Force On I/L")
  field(ONST, "I/L Operating")
  field(ZRVL, "1")
  field(ONVL, "2")
  field(ZRSV, "MAJOR")
  field(ONSV, "NO_ALARM")
  field(DISA, "$(channel)")
  field(DOL, "1")
  #field(PINI, "YES")
}

record(seq, "$(device):RLA:SEQ") {
  field(DESC, "Sequence Relay Setpoint")
  field(SELM, "Specified")
  field(SELL, "$(device):RLA:ENABLE.RVAL")
  field(DOL1, "0")
  field(LNK1, "$(device):RLA:DIS PP")
  field(DOL2, "$(device):RLA:SETSP")
  field(LNK2, "$(device):RLA:OUTSP PP")
  field(DISA, "$(channel)")
}

#
#% archiver 10 Monitor
#% controldesk MPS Interlock readback
#
record(ai, "$(device):RLA:SP") {
  field(DESC, "$(rlasp_desc=MPS Interlock)")
  field(DTYP, "stream")
  field(INP, "@mks937a.protocol getsp(3,RLY,$(device)) $(port) 0")
  field(SCAN, "1 second")
  field(EGU, "mbar")
  field(PREC, "1")
  field(HOPR, "$(rlasp_hopr=1.2e-2)")
  field(LOPR, "$(rlasp_lopr=2.7e-10)")
  field(HIHI, "$(rlasp_hihi=1.3e-2)")
  field(LOLO, "$(rlasp_lolo=2.6e-10)")
  field(HIGH, "$(rlasp_high=1.1e-7)")
  field(LOW, "$(rlasp_low=9.0e-8)")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
  field(DISA, "$(channel)")
}

record(ao, "$(device):RLA:OUTSP") 
    {
    field(DESC, "Output Relay Setpoint")
    field(DTYP, "stream")
    field(SDIS, "$(device):RLA:ILKSETSP:NOWRITE")
    field(OUT, "@mks937a.protocol setsp(3,RLY,$(device)) $(port) 0")
    field(DISA, "$(channel)")
    }

record(bo, "$(device):RLA:DIS") {
  field(DESC, "Disable Relay Setpoint")
  field(DTYP, "stream")
  field(OUT, "@mks937a.protocol dissp(3,RLY) $(port) 0")
  field(DISA, "$(channel)")
}

record(calc, "$(device):PDIS") {
  field(PHAS, "1")
  field(CALC, "(A>1)?1:0")
  field(INPA, "$(device):STA")
  field(FLNK, "$(device):P")
}



record(bi, "$(device):OFFWARN") 
{
  field(DESC, "Warning for OFF button")
  field(PINI, "YES")
  field(INP, "$(offwarn=0)")
  field(ZNAM, "Warning off")
  field(ONAM, "Warning on")
}

#
# The :CONSTZERO record allows the :ILKSETSP:NOWRITE record (below)
# to have a PV link rather than constant zero value, which would be 
# invalid with the "MS CP" modifiers
#
record(bi, "$(device):PRO:CONSTZERO")
  {
  field(DESC, "Constant zero value")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(INP, "0")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  }

# Disable the writing of setpoints to hardware so the machine does not trip
# when the IOC is rebooted with lower default interlock pressures
# This record is local to the relay instance, but controlled by the global
# access record - given in the macro parameters. If not supplied, it will
# assume an empty INP and do nothing.
#
# NB: These four records are identical and could have been instantiated via
#     alias. The names are for compatibility with the macros in the EDM screens
#     in which they are referenced.
#
record(bi, "$(device):PRO:ILKSETSP:NOWRITE")
  {
  field(DESC, "ILK setpoint access")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(INP, "$(ilk_write_access_pv=$(device):PRO:CONSTZERO) MS CP")
  field(ZNAM, "Allow")
  field(ONAM, "Inhibit")
  }
record(bi, "$(device):CTL:ILKSETSP:NOWRITE")
  {
  field(DESC, "ILK setpoint access")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(INP, "$(ilk_write_access_pv=$(device):PRO:CONSTZERO) MS CP")
  field(ZNAM, "Allow")
  field(ONAM, "Inhibit")
  }
record(bi, "$(device):RLA:ILKSETSP:NOWRITE")
  {
  field(DESC, "ILK setpoint access")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(INP, "$(ilk_write_access_pv=$(device):PRO:CONSTZERO) MS CP")
  field(ZNAM, "Allow")
  field(ONAM, "Inhibit")
  }
record(bi, "$(device):RLY:ILKSETSP:NOWRITE")
  {
  field(DESC, "ILK setpoint access")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(INP, "$(ilk_write_access_pv=$(device):PRO:CONSTZERO) MS CP")
  field(ZNAM, "Allow")
  field(ONAM, "Inhibit")
  }
  
# -----------------------------------------------------------------------------------------
# These two records work together to provide one scan
# to correctly initialise just once, records that used to use PINI
# This is to ensure that the autoSR PV refered by ilk_write_access_pv
# is correctly established before any other record processing, to potentially
# avoid overwriting setpoints at IOC startup.
#
record(bo, "$(device):CTL:INITSETSPSDIS") 
{
  field(DTYP, "Soft Channel")
  field(VAL, "1")
  field(OUT, "$(device):CTL:INITSETSPFAN.DISA")
}
record(fanout, "$(device):CTL:INITSETSPFAN")
{
    field(DESC, "Relay 1s Scan fanout")
    field(SCAN, "1 second")
    field(LNK1, "$(device):CTL:ENABLE")
    field(LNK2, "$(device):PRO:ENABLE")
    field(LNK3, "$(device):RLY:ENABLE")
    field(LNK4, "$(device):RLA:ENABLE")
    field(LNK5, "$(device):CTL:INITSETSPSDIS")
    field(SELM, "All")
}

################################################################################
# Text error message
#
record(stringin, "$(device):ERROR")
    {
    field(DESC, "Last error message")
    field(INP, "")
    field(PINI, "YES")
    }
